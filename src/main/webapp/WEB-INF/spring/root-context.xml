<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 컨트롤러와 상관없는 설정들 -->	
	<!-- 데이터 소스 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${database.driver}"/>
		<property name="url" value="${database.url}"/>
		<property name="username" value="${database.username}"/>
		<property name="password" value="${database.password}"/>
	</bean>
	
	<!-- 환경설정 객체 만들기 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/application.properties"/>
		<property name="fileEncoding" value="utf-8"/>	
	</bean>
	
	<!-- 마이바티스 factory객체 생성 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:/mybatisConfig.xml"/>
		<property name="mapperLocations" value="classpath*:/mappers/**/*Mapper.xml"/>
	</bean>
	
	<!-- 마이바티스 세션 생성 -->
	<!-- SqlSessionTemplate:객체관리를 해준다 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>	
	
	<!-- 파일저장경로 -->
	<!-- new String("C:\\Users\\user\\Desktop\\두루미\\savedir"); -->
	<bean id="savedir" class="java.lang.String">
		<constructor-arg value="${file.savedir}"/>
	</bean> 
	
	<!-- 암호화 객체 -->
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>
	
	
	<!-- 이메일 전송 -->
	<!-- 2단계인증 비밀번호 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="username" value="dlrkdgus7675@gmail.com"/>
		<property name="password" value="gllqaquvmrfvskmd"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">false</prop>
 				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			</props>
		</property>
	</bean>
	
		<!-- 트랜잭션 매니져 객체 생성(데이터소스를 관리(commit, rollback) -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
		<!-- 트랜잭션 어노테이션 사용가능 -->
	<tx:annotation-driven/>
</beans>

